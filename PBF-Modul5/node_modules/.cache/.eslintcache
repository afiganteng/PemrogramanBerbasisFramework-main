[{"D:\\Kuliah\\Semester6\\PBF\\Praktikum\\PemrogramanBerbasisFramework-main\\PBF-Modul5\\src\\index.js":"1","D:\\Kuliah\\Semester6\\PBF\\Praktikum\\PemrogramanBerbasisFramework-main\\PBF-Modul5\\src\\reportWebVitals.js":"2","D:\\Kuliah\\Semester6\\PBF\\Praktikum\\PemrogramanBerbasisFramework-main\\PBF-Modul5\\src\\App.js":"3"},{"size":500,"mtime":1619952066000,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1619952066000,"results":"6","hashOfConfig":"5"},{"size":9734,"mtime":1619952066000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1f71noy",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"D:\\Kuliah\\Semester6\\PBF\\Praktikum\\PemrogramanBerbasisFramework-main\\PBF-Modul5\\src\\index.js",[],"D:\\Kuliah\\Semester6\\PBF\\Praktikum\\PemrogramanBerbasisFramework-main\\PBF-Modul5\\src\\reportWebVitals.js",[],"D:\\Kuliah\\Semester6\\PBF\\Praktikum\\PemrogramanBerbasisFramework-main\\PBF-Modul5\\src\\App.js",["15","16","17","18","19"],"import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n  useHistory,\n  useLocation,\n  useParams,\n  useRouteMatch\n} from \"react-router-dom\";\n\nexport default function NestingAuthExample() {\n  return(\n    <Router>\n      <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <div class=\"container\">\n          <a class=\"navbar=brand\" href=\"#\">MY CLOTHING Store</a>\n          <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" \n          data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" \n          aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            \n            <span class=\"navbar-toggler-icon\"></span>\n          </button>  \n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav ml-auto\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link\">\n                  <Link to=\"/home\">HOME</Link>\n                  <span class=\"sr-only\">(current)</span>\n                </a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\">\n                  <Link to=\"/prodact\">PRODUCT</Link>\n                  <span class=\"sr-only\">(current)</span>\n                </a>\n              </li>\n              <li className=\"nav-item ml-2 mt-2\">\n              <AuthButton />\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n      <div className=\"bghome\">\n        <br></br>\n        <div class=\"text-center\">\n          <h4>Let's Buy The Clothes</h4>\n        </div>\n      </div>\n      <hr />\n\n      <Switch>\n        <Route  path=\"/home\">\n          <Home />\n        </Route>\n        <Route  path=\"/login\">\n          <LoginPage />\n        </Route>\n        <Route  path=\"/prodact\">\n          <Prodact />\n        </Route>\n        <PrivateRoute path=\"/private\">\n          <ProtectedPage />\n        </PrivateRoute>\n      </Switch>\n    </Router>\n  );\n}\n\nconst fakeAuth={\n  isAuthenticated: false,\n  authenticate(cb) {\n    fakeAuth.isAuthenticated = true;\n    setTimeout(cb, 100);\n  },\n  signout(cb) {\n    fakeAuth.isAuthenticated = false;\n    setTimeout(cb, 100);\n  }\n};\n\nfunction AuthButton() {\n  let history = useHistory();\n  let location = useLocation();\n  let { from } = location.state || { from: {pathname: \"/\"}};\n\n  return fakeAuth.isAuthenticated ? (\n      <button\n        onClick={() => {\n          fakeAuth.signout(() => history.push(from));\n        }}\n      >\n        Sign out\n      </button>\n  ) : (\n    <p>You are not logged in.</p>\n  );\n}\n\nfunction PrivateRoute({children, ...rest}){\n  return (\n    <Route \n    {...rest}\n    render={({ location }) =>\n    fakeAuth.isAuthenticated ? (\n      children\n    ) : (\n      <Redirect\n      to={{\n        pathname: \"/login\",\n        state: {from:location}\n      }}\n      />\n    )\n    }\n    />\n  );\n}\n\nfunction ProtectedPage() {\n  return <h3>Private</h3>;\n}\n\nfunction LoginPage() {\n  let history = useHistory();\n  let location = useLocation();\n\n  let { from } = location.state || { from: {pathname: \"/prodact\"}};\n  let login = () => {\n    fakeAuth.authenticate(() => {\n      history.replace(from);\n    });\n  };\n\n  return (\n    <div>\n      <center>\n      <p>Login to see our product {from.pathname}</p>\n      <button type=\"button\" class=\"btn btn-primary\" onClick={login}>Log in</button>\n      </center>\n    </div>\n  );\n}\n\nfunction Home(){\n  const isLoggedIn = fakeAuth.isAuthenticated;\n  return(\n    <div>\n      <center>\n          <div class=\"container\">\n          <img src=\"https://cdn.shopify.com/s/files/1/0028/6132/files/pic_1_of_11_1440x.jpg?v=1611176847\"\n          alt=\"content\"/>\n          <h1> WELCOME ! </h1>\n          <br></br><p>BUY YOUR FASHION</p>\n        </div>\n      </center>\n    </div>\n  );\n}\n\nfunction Prodact(){\n  let { path, url } = useRouteMatch();\n  const isLoggedIn = fakeAuth.isAuthenticated;\n  if (isLoggedIn == true) {\n    return(\n      <div>\n        <center>\n          <h4>All Product</h4>\n          <div class=\"card card-group\">\n            <div class=\"card\">\n            <Link to={`${url}/Kemeja Rp. 350.000`}>\n              <img src=\"https://cdn.shopify.com/s/files/1/0028/6132/products/20201215-3sixteen-flannel-bw-1_540x.jpg?v=1610556256\"\n              alt=\"product1\" /><br></br>\n              <h5>SHIRT</h5>\n              </Link>\n            </div>\n\n            <div class=\"card\">\n            <Link to={`${url}/Bucket Hat Premium Rp. 150.000`}>\n              <img src=\"https://cdn.shopify.com/s/files/1/0028/6132/products/CamoBucket-1_330x.jpg?v=1607813757\"\n              alt=\"Product2\" /><br></br>\n              <h5>BUCKET HAT</h5>\n              </Link>\n            </div>\n\n            <div class=\"card\">\n            <Link to={`${url}/Blue Jeans Rp. 650.000`}>\n              <img src=\"https://cdn.shopify.com/s/files/1/0028/6132/products/20201015-3sixteen-fatiguepant-model-blue-1_720x960_crop_center.jpg?v=1605551462\"\n              alt=\"Product3\" /><br></br>\n              <h5>PANTS</h5>\n              </Link>\n              <br></br>\n              <br/>\n            </div>\n          </div>\n          <br></br>\n\n          <div className=\"bgLink\">\n          <Switch>\n            <Route exact path=\"{path}\">\n              <h3>Buy your Fashion!</h3>\n            </Route>\n\n            <Route path={`${path}/:prodactId`}>\n                <Prodacts />\n            </Route>\n          </Switch>\n          </div>\n        </center>\n      </div>\n    );\n  }\n  return (\n    <div>\n      <center>\n        <h2>FASHION STORE</h2>\n      <Link to=\"/login\">\n      <button className=\"btn btn-warning\">Go to login page</button>\n      </Link>\n      </center>\n    </div>\n  );\n}\n\nfunction Prodacts(){\n  let {prodactId} = useParams();\n\n  return (\n    <div>\n      <h3>{prodactId}</h3>\n    </div>\n  );\n}\n\n// PRAKTIKUM\n\n// import React from \"react\";\n// import{\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link,\n//   useParams,\n//   useRouteMatch,\n//   useLocation,\n//   Redirect,\n//   useHistory,\n//   withRouter\n// } from \"react-router-dom\";\n\n\n// export default function AuthExample() {\n//   return (\n//     <Router>\n//       <div>\n//         <AuthButton />\n//         <ul>\n//           <li>\n//             <Link to=\"/public\">Public Page</Link>\n//           </li>\n//           <li>\n//             <Link to=\"/private\">Private Page</Link>\n//           </li>\n          \n//         </ul>\n\n//         <Switch>\n//           <Route path=\"/public\">\n//             <PublicPage/>\n//           </Route>\n//           <Route path=\"/login\">\n//             <LoginPage />\n//           </Route>\n//           <PrivateRoute path=\"/private\">\n//             <ProtectedPage />\n//           </PrivateRoute>\n//         </Switch>\n//       </div>\n//     </Router>\n//   );\n// }\n// const fakeAuth ={\n//   isAuthenticated: false,\n//   authenticate(cb) {\n//     fakeAuth.isAuthenticated = true;\n//     setTimeout(cb, 100);\n//   },\n//   signot(cb) {\n//     fakeAuth.isAuthenticated = false;\n//     setTimeout(cb, 100);\n//   }\n// };\n\n// const AuthButton = withRouter(({ history }) =>\n//   fakeAuth.isAuthenticated ? (\n//     <p>\n//       Welcome!{\" \"}\n//       <button \n//       onClick={() => {\n//         fakeAuth.signot(() => history.push(\"/\"));\n//         }}\n//       >\n//         Sign out\n//       </button>\n//     </p>\n//   ) : (\n//     <p>You are not logged in.</p>\n//   )\n// );\n\n// function PrivateRoute({ children, ...rest}){\n//   return (\n//     <Route \n//       {...rest}\n//       render={({ location }) =>\n//         fakeAuth.isAuthenticated ? (\n//           children\n//         ) : (\n//           <Redirect\n//             to={{\n//               pathname: \"/login\",\n//               state: {from:location}\n//             }}\n//             />\n//         )\n//       }\n//      />\n//   );\n// }\n\n// function PublicPage() {\n//   return <h3>Public</h3>;\n// }\n\n// function ProtectedPage() {\n//   return <h3>Private</h3>;\n// }\n\n// function LoginPage() {\n//   let history = useHistory();\n//   let location = useLocation();\n\n//   let { from } = location.state || { from: {pathname: \"/\"} };\n//   let login = () => {\n//     fakeAuth.authenticate(() => {\n//       history.replace(from);\n//     });\n//   };\n\n//   return (\n//     <div>\n//       <p>You must log in to view the page at {from.pathname}</p>\n//       <button onClick={login}>Log in</button>\n//     </div>\n//   );\n// }\n// function Child(){\n//   let {id} = useParams();\n//   return (\n//     <div>\n//       <h3>ID: {id} </h3>\n//     </div>\n//   );\n// }\n\n// function Home(){\n//   return (\n//      <div>\n//        <h2>Home</h2>\n//      </div>\n//    );\n//  }\n\n//  function Topics(){\n//   let {path, url} = useRouteMatch();\n//   return (\n//      <div>\n//        <h2>Topics</h2>\n//        <ul>\n//          <li>\n//            <Link to={`${url}/Sate, Nasi goreng`}>Kuliner</Link>\n//          </li>\n//          <li>\n//            <Link to={`${url}/Wisata alam, Museum`}>Travelling</Link>\n//          </li>\n//          <li>\n//            <Link to={`${url}/Ibis, JW Marriot`}>Review Hotel</Link>\n//          </li>\n//        </ul>\n\n//        <Switch>\n//          <Route exact path={path}>\n//            <h3>Please select a topic.</h3>\n//          </Route>\n//          <Route path={`${path}/:topicId`}>\n//            <Topic />\n//          </Route>\n//        </Switch>\n//      </div>\n//    );\n//  }\n\n//  function Topic(){\n//    let {topicId} = useParams();\n\n//    return (\n//      <div>\n//        <h3>{topicId}</h3>\n//      </div>\n//    )\n//  }\n\n// function About(){\n//   return (\n//     <div>\n//       <h2>About</h2>\n//     </div>\n//   );\n// }\n\n// function Dashboard(){\n//   return (\n//     <div>\n//       <h2>Dashboard</h2>\n//     </div>\n//   );\n// }",{"ruleId":"20","severity":1,"message":"21","line":21,"column":11,"nodeType":"22","endLine":21,"endColumn":44},{"ruleId":"20","severity":1,"message":"23","line":31,"column":17,"nodeType":"22","endLine":31,"endColumn":37},{"ruleId":"20","severity":1,"message":"23","line":37,"column":17,"nodeType":"22","endLine":37,"endColumn":37},{"ruleId":"24","severity":1,"message":"25","line":151,"column":9,"nodeType":"26","messageId":"27","endLine":151,"endColumn":19},{"ruleId":"28","severity":1,"message":"29","line":169,"column":18,"nodeType":"30","messageId":"31","endLine":169,"endColumn":20},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'isLoggedIn' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]